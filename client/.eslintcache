[{"/mnt/d/projects/Main Projects/social-media/app/frontend/src/index.tsx":"1","/mnt/d/projects/Main Projects/social-media/app/frontend/src/utils/ApolloClient.ts":"2","/mnt/d/projects/Main Projects/social-media/app/frontend/src/App.tsx":"3","/mnt/d/projects/Main Projects/social-media/app/frontend/src/utils/AuthRoute.tsx":"4","/mnt/d/projects/Main Projects/social-media/app/frontend/src/context/AuthUser.context.tsx":"5","/mnt/d/projects/Main Projects/social-media/app/frontend/src/pages/Home.tsx":"6","/mnt/d/projects/Main Projects/social-media/app/frontend/src/components/Navbar.tsx":"7","/mnt/d/projects/Main Projects/social-media/app/frontend/src/pages/Login.tsx":"8","/mnt/d/projects/Main Projects/social-media/app/frontend/src/pages/Register.tsx":"9","/mnt/d/projects/Main Projects/social-media/app/frontend/src/components/Links.tsx":"10","/mnt/d/projects/Main Projects/social-media/app/frontend/src/components/Forms/LoginForm.tsx":"11","/mnt/d/projects/Main Projects/social-media/app/frontend/src/components/Forms/RegisterForm.tsx":"12","/mnt/d/projects/Main Projects/social-media/app/frontend/src/hooks/useForm.ts":"13","/mnt/d/projects/Main Projects/social-media/app/frontend/src/components/Routes.tsx":"14","/mnt/d/projects/Main Projects/social-media/app/frontend/src/utils/cookies.ts":"15"},{"size":219,"mtime":1609247908062,"results":"16","hashOfConfig":"17"},{"size":184,"mtime":1609230759828,"results":"18","hashOfConfig":"17"},{"size":559,"mtime":1609247916341,"results":"19","hashOfConfig":"17"},{"size":509,"mtime":1609247638605,"results":"20","hashOfConfig":"17"},{"size":1729,"mtime":1609424351409,"results":"21","hashOfConfig":"17"},{"size":141,"mtime":1609245513058,"results":"22","hashOfConfig":"17"},{"size":182,"mtime":1609421117724,"results":"23","hashOfConfig":"17"},{"size":198,"mtime":1609245513064,"results":"24","hashOfConfig":"17"},{"size":214,"mtime":1609246561186,"results":"25","hashOfConfig":"17"},{"size":739,"mtime":1609420990246,"results":"26","hashOfConfig":"17"},{"size":2415,"mtime":1609424633575,"results":"27","hashOfConfig":"17"},{"size":4988,"mtime":1609423143872,"results":"28","hashOfConfig":"17"},{"size":528,"mtime":1609246548970,"results":"29","hashOfConfig":"17"},{"size":512,"mtime":1609247751171,"results":"30","hashOfConfig":"17"},{"size":723,"mtime":1609424612777,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ys8e2h",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/mnt/d/projects/Main Projects/social-media/app/frontend/src/index.tsx",[],["66","67"],"/mnt/d/projects/Main Projects/social-media/app/frontend/src/utils/ApolloClient.ts",[],"/mnt/d/projects/Main Projects/social-media/app/frontend/src/App.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/frontend/src/utils/AuthRoute.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/frontend/src/context/AuthUser.context.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/frontend/src/pages/Home.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/frontend/src/components/Navbar.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/frontend/src/pages/Login.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/frontend/src/pages/Register.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/frontend/src/components/Links.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/frontend/src/components/Forms/LoginForm.tsx",["68"],"import React from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nimport { AuthContext } from \"../../context/AuthUser.context\";\nimport useForm from \"../../hooks/useForm\";\n\ninterface LoginFormValues {\n  username: string;\n  password: string;\n}\n\nconst LoginForm: React.FC = () => {\n  const context = React.useContext(AuthContext);\n  const [errors, setErrors] = React.useState<LoginFormValues>({\n    username: \"\",\n    password: \"\",\n  });\n  const { values, onSubmit, onChange } = useForm<LoginFormValues>(\n    {\n      username: \"\",\n      password: \"\",\n    },\n    handleLogin\n  );\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(_, { data: { login: userData } }) {\n      context.login(userData);\n    },\n    onError({ graphQLErrors, networkError }) {\n      if (graphQLErrors) {\n        setErrors(graphQLErrors[0].extensions!.exception.errors);\n      }\n    },\n    variables: values,\n  });\n\n  function handleLogin() {\n    loginUser();\n  }\n\n  return (\n    <form className=\"form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label className=\"form-control__label\" htmlFor=\"login-username\">\n          Username\n        </label>\n        <input\n          onChange={onChange}\n          value={values.username}\n          className=\"form-control__input\"\n          type=\"text\"\n          name=\"username\"\n          id=\"login-username\"\n        />\n        {errors.username !== \"\" && (\n          <h3 className=\"form-error\">{errors.username}</h3>\n        )}\n      </div>\n      <div className=\"form-control\">\n        <label className=\"form-control__label\" htmlFor=\"login-password\">\n          Password\n        </label>\n        <input\n          onChange={onChange}\n          value={values.password}\n          className=\"form-control__input\"\n          type=\"password\"\n          name=\"password\"\n          id=\"login-password\"\n        />\n        {errors.password !== \"\" && (\n          <h3 className=\"form-error\">{errors.password}</h3>\n        )}\n      </div>\n      <div className=\"form-control\">\n        <button type=\"submit\" className=\"btn btn__basic\">\n          Login\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst LOGIN_USER = gql`\n  mutation($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      username\n      firstName\n      lastName\n      token\n      email\n      createdAt\n    }\n  }\n`;\n\nexport default LoginForm;\n","/mnt/d/projects/Main Projects/social-media/app/frontend/src/components/Forms/RegisterForm.tsx",["69"],"import React from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nimport { AuthContext } from \"../../context/AuthUser.context\";\nimport useForm from \"../../hooks/useForm\";\n\ninterface RegisterFormValues {\n  firstName: string;\n  lastName: string;\n  username: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst RegisterForm: React.FC = () => {\n  const context = React.useContext(AuthContext);\n  const [errors, setErrors] = React.useState<RegisterFormValues>({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const { values, onSubmit, onChange } = useForm<RegisterFormValues>(\n    {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n    handleRegistration\n  );\n\n  const [registerUser, { loading }] = useMutation(REGISTER_USER, {\n    update(_, { data: { register: userData } }) {\n      context.login(userData);\n    },\n    variables: values,\n    onError({ graphQLErrors, networkError }) {\n      if (graphQLErrors) {\n        setErrors(graphQLErrors[0].extensions!.exception.errors);\n      }\n    },\n  });\n\n  function handleRegistration() {\n    registerUser();\n  }\n\n  return (\n    <form className=\"form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label className=\"form-control__label\" htmlFor=\"register-firstName\">\n          First Name\n        </label>\n        <input\n          onChange={onChange}\n          value={values.firstName}\n          className=\"form-control__input\"\n          type=\"text\"\n          name=\"firstName\"\n          id=\"register-firstName\"\n        />\n        {errors.firstName !== \"\" && (\n          <h3 className=\"form-error\">{errors.firstName}</h3>\n        )}\n      </div>\n      <div className=\"form-control\">\n        <label className=\"form-control__label\" htmlFor=\"register-lastName\">\n          Last Name\n        </label>\n        <input\n          onChange={onChange}\n          value={values.lastName}\n          className=\"form-control__input\"\n          type=\"text\"\n          name=\"lastName\"\n          id=\"register-lastName\"\n        />\n        {errors.lastName !== \"\" && (\n          <h3 className=\"form-error\">{errors.lastName}</h3>\n        )}\n      </div>\n      <div className=\"form-control\">\n        <label className=\"form-control__label\" htmlFor=\"register-username\">\n          Username\n        </label>\n        <input\n          onChange={onChange}\n          value={values.username}\n          className=\"form-control__input\"\n          type=\"text\"\n          name=\"username\"\n          id=\"register-username\"\n        />\n        {errors.username !== \"\" && (\n          <h3 className=\"form-error\">{errors.username}</h3>\n        )}\n      </div>\n      <div className=\"form-control\">\n        <label className=\"form-control__label\" htmlFor=\"register-email\">\n          Email\n        </label>\n        <input\n          onChange={onChange}\n          value={values.email}\n          className=\"form-control__input\"\n          type=\"email\"\n          name=\"email\"\n          id=\"register-email\"\n        />\n        {errors.email !== \"\" && <h3 className=\"form-error\">{errors.email}</h3>}\n      </div>\n      <div className=\"form-control\">\n        <label className=\"form-control__label\" htmlFor=\"register-password\">\n          Password\n        </label>\n        <input\n          onChange={onChange}\n          value={values.password}\n          className=\"form-control__input\"\n          type=\"password\"\n          name=\"password\"\n          id=\"register-password\"\n        />\n        {errors.password !== \"\" && (\n          <h3 className=\"form-error\">{errors.password}</h3>\n        )}\n      </div>\n      <div className=\"form-control\">\n        <label\n          className=\"form-control__label\"\n          htmlFor=\"register-confirmPassword\"\n        >\n          Confirm password\n        </label>\n        <input\n          onChange={onChange}\n          value={values.confirmPassword}\n          className=\"form-control__input\"\n          type=\"password\"\n          name=\"confirmPassword\"\n          id=\"register-confirmPassword\"\n        />\n        {errors.confirmPassword !== \"\" && (\n          <h3 className=\"form-error\">{errors.confirmPassword}</h3>\n        )}\n      </div>\n      <div className=\"form-control\">\n        <button type=\"submit\" className=\"btn btn__basic\">\n          Register\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst REGISTER_USER = gql`\n  mutation(\n    $username: String!\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    register(\n      registerInput: {\n        username: $username\n        firstName: $firstName\n        lastName: $lastName\n        email: $email\n        password: $password\n        confirmPassword: $confirmPassword\n      }\n    ) {\n      username\n      token\n      createdAt\n      firstName\n      lastName\n      email\n      id\n    }\n  }\n`;\n\nexport default RegisterForm;\n","/mnt/d/projects/Main Projects/social-media/app/frontend/src/hooks/useForm.ts",[],["70","71"],"/mnt/d/projects/Main Projects/social-media/app/frontend/src/components/Routes.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/frontend/src/utils/cookies.ts",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":26,"column":23,"nodeType":"78","messageId":"79","endLine":26,"endColumn":30},{"ruleId":"76","severity":1,"message":"77","line":38,"column":26,"nodeType":"78","messageId":"79","endLine":38,"endColumn":33},{"ruleId":"72","replacedBy":"80"},{"ruleId":"74","replacedBy":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar",["82"],["83"],"no-global-assign","no-unsafe-negation"]