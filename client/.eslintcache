[{"/mnt/d/projects/Main Projects/social-media/app/client/src/index.tsx":"1","/mnt/d/projects/Main Projects/social-media/app/client/src/App.tsx":"2","/mnt/d/projects/Main Projects/social-media/app/client/src/utils/cookies.ts":"3","/mnt/d/projects/Main Projects/social-media/app/client/src/pages/Home.tsx":"4","/mnt/d/projects/Main Projects/social-media/app/client/src/pages/Register.tsx":"5","/mnt/d/projects/Main Projects/social-media/app/client/src/pages/Login.tsx":"6","/mnt/d/projects/Main Projects/social-media/app/client/src/AuthUser.context.tsx":"7","/mnt/d/projects/Main Projects/social-media/app/client/src/pages/SingleUser.tsx":"8","/mnt/d/projects/Main Projects/social-media/app/client/src/pages/SinglePost.tsx":"9","/mnt/d/projects/Main Projects/social-media/app/client/src/pages/NewPost.tsx":"10","/mnt/d/projects/Main Projects/social-media/app/client/src/utils/date.ts":"11","/mnt/d/projects/Main Projects/social-media/app/client/src/hooks/useToast.tsx":"12","/mnt/d/projects/Main Projects/social-media/app/client/src/hooks/useForm.tsx":"13","/mnt/d/projects/Main Projects/social-media/app/client/src/hooks/useModal.tsx":"14","/mnt/d/projects/Main Projects/social-media/app/client/src/hooks/useOutsideAlerter.tsx":"15","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/Card.tsx":"16","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/CardMenu.tsx":"17","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/CardContent.tsx":"18","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/CardTitle.tsx":"19","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/CardActions.tsx":"20","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/CardMeta.tsx":"21","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/index.ts":"22","/mnt/d/projects/Main Projects/social-media/app/client/src/hooks/index.ts":"23","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Button/index.ts":"24","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Button/CustomButton.tsx":"25","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Button/LikeButton.tsx":"26","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Button/CommentButton.tsx":"27","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Button/ShareButton.tsx":"28","/mnt/d/projects/Main Projects/social-media/app/client/src/utils/index.ts":"29","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Typography/index.ts":"30","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Typography/Heading.tsx":"31","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Helpers/Spacer.tsx":"32","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Helpers/index.ts":"33","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Helpers/Loading.tsx":"34","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Navigation/Navbar.tsx":"35","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Navigation/Links.tsx":"36","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Navigation/Logo.tsx":"37","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Inputs/index.ts":"38","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Inputs/CustomInputText.tsx":"39","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Routes.tsx":"40","/mnt/d/projects/Main Projects/social-media/app/client/src/pages/index.ts":"41","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/AuthRoute.tsx":"42","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Layout/Layout.tsx":"43","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Modal/Modal.tsx":"44","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Toast/Toast.tsx":"45","/mnt/d/projects/Main Projects/social-media/app/client/src/graphql.ts":"46","/mnt/d/projects/Main Projects/social-media/app/client/src/config/ApolloClient.ts":"47","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Forms/CommentForm.tsx":"48","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Forms/LoginForm.tsx":"49","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Forms/PostForm.tsx":"50","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Forms/RegisterForm.tsx":"51","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Forms/index.ts":"52","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Cards/CommentCard.tsx":"53","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Cards/PostCard.tsx":"54","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Cards/index.ts":"55","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Layout/index.ts":"56","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Layout/Container.tsx":"57","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Cards/UserCard.tsx":"58","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Layout/Box.tsx":"59","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/CardImage.tsx":"60","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Button/FollowButton.tsx":"61","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Typography/Paragraph.tsx":"62"},{"size":197,"mtime":1610703146157,"results":"63","hashOfConfig":"64"},{"size":606,"mtime":1611754366043,"results":"65","hashOfConfig":"64"},{"size":723,"mtime":1609481172096,"results":"66","hashOfConfig":"64"},{"size":1067,"mtime":1610717673571,"results":"67","hashOfConfig":"64"},{"size":276,"mtime":1610716979244,"results":"68","hashOfConfig":"64"},{"size":260,"mtime":1610716966299,"results":"69","hashOfConfig":"64"},{"size":1624,"mtime":1611754366053,"results":"70","hashOfConfig":"64"},{"size":2076,"mtime":1610974977068,"results":"71","hashOfConfig":"64"},{"size":2156,"mtime":1611754366404,"results":"72","hashOfConfig":"64"},{"size":280,"mtime":1610716992826,"results":"73","hashOfConfig":"64"},{"size":235,"mtime":1610366331154,"results":"74","hashOfConfig":"64"},{"size":844,"mtime":1610691454100,"results":"75","hashOfConfig":"64"},{"size":581,"mtime":1611754366375,"results":"76","hashOfConfig":"64"},{"size":269,"mtime":1610715993867,"results":"77","hashOfConfig":"64"},{"size":530,"mtime":1610691559778,"results":"78","hashOfConfig":"64"},{"size":303,"mtime":1610685792139,"results":"79","hashOfConfig":"64"},{"size":1209,"mtime":1610701268434,"results":"80","hashOfConfig":"64"},{"size":260,"mtime":1610686464904,"results":"81","hashOfConfig":"64"},{"size":254,"mtime":1610697659545,"results":"82","hashOfConfig":"64"},{"size":254,"mtime":1610687172211,"results":"83","hashOfConfig":"64"},{"size":245,"mtime":1610687274787,"results":"84","hashOfConfig":"64"},{"size":371,"mtime":1610726494467,"results":"85","hashOfConfig":"64"},{"size":222,"mtime":1610691615309,"results":"86","hashOfConfig":"64"},{"size":298,"mtime":1610787548721,"results":"87","hashOfConfig":"64"},{"size":856,"mtime":1610692331456,"results":"88","hashOfConfig":"64"},{"size":1759,"mtime":1610707802752,"results":"89","hashOfConfig":"64"},{"size":567,"mtime":1610707739258,"results":"90","hashOfConfig":"64"},{"size":949,"mtime":1611754366109,"results":"91","hashOfConfig":"64"},{"size":431,"mtime":1610703372366,"results":"92","hashOfConfig":"64"},{"size":106,"mtime":1611754439373,"results":"93","hashOfConfig":"64"},{"size":371,"mtime":1610703483390,"results":"94","hashOfConfig":"64"},{"size":265,"mtime":1610704767881,"results":"95","hashOfConfig":"64"},{"size":97,"mtime":1610702215789,"results":"96","hashOfConfig":"64"},{"size":369,"mtime":1610707836496,"results":"97","hashOfConfig":"64"},{"size":354,"mtime":1610702410684,"results":"98","hashOfConfig":"64"},{"size":1806,"mtime":1611754366173,"results":"99","hashOfConfig":"64"},{"size":364,"mtime":1610702380458,"results":"100","hashOfConfig":"64"},{"size":81,"mtime":1610702529554,"results":"101","hashOfConfig":"64"},{"size":1580,"mtime":1611754366134,"results":"102","hashOfConfig":"64"},{"size":706,"mtime":1610703023785,"results":"103","hashOfConfig":"64"},{"size":278,"mtime":1610702951497,"results":"104","hashOfConfig":"64"},{"size":829,"mtime":1611754366209,"results":"105","hashOfConfig":"64"},{"size":418,"mtime":1610716912487,"results":"106","hashOfConfig":"64"},{"size":1643,"mtime":1611754512779,"results":"107","hashOfConfig":"64"},{"size":1116,"mtime":1610703236659,"results":"108","hashOfConfig":"64"},{"size":468,"mtime":1610703359150,"results":"109","hashOfConfig":"64"},{"size":620,"mtime":1610703440471,"results":"110","hashOfConfig":"64"},{"size":4265,"mtime":1611754366304,"results":"111","hashOfConfig":"64"},{"size":2908,"mtime":1611754512779,"results":"112","hashOfConfig":"64"},{"size":4608,"mtime":1611754366337,"results":"113","hashOfConfig":"64"},{"size":4611,"mtime":1611754513300,"results":"114","hashOfConfig":"64"},{"size":222,"mtime":1610703839415,"results":"115","hashOfConfig":"64"},{"size":4059,"mtime":1611754512779,"results":"116","hashOfConfig":"64"},{"size":4951,"mtime":1611758208307,"results":"117","hashOfConfig":"64"},{"size":161,"mtime":1610718571194,"results":"118","hashOfConfig":"64"},{"size":134,"mtime":1610724685773,"results":"119","hashOfConfig":"64"},{"size":255,"mtime":1610704988205,"results":"120","hashOfConfig":"64"},{"size":1430,"mtime":1611754512779,"results":"121","hashOfConfig":"64"},{"size":231,"mtime":1610724664387,"results":"122","hashOfConfig":"64"},{"size":391,"mtime":1610726081390,"results":"123","hashOfConfig":"64"},{"size":1303,"mtime":1611754513301,"results":"124","hashOfConfig":"64"},{"size":383,"mtime":1611754270767,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"5ctubq",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"128"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"128"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"128"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"128"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"128"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"128"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"128"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"128"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"128"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"/mnt/d/projects/Main Projects/social-media/app/client/src/index.tsx",[],["261","262"],"/mnt/d/projects/Main Projects/social-media/app/client/src/App.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/utils/cookies.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/pages/Home.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/pages/Register.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/pages/Login.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/AuthUser.context.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/pages/SingleUser.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/pages/SinglePost.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/pages/NewPost.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/utils/date.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/hooks/useToast.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/hooks/useForm.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/hooks/useModal.tsx",["263"],"import { useState } from \"react\";\r\n\r\nconst useModal = (initialMode = false) => {\r\n  const [modalOpen, setModalOpen] = useState(initialMode);\r\n\r\n  const toggleModal = () => setModalOpen(!modalOpen);\r\n  return { modalOpen, toggleModal };\r\n};\r\n\r\nexport default useModal;\r\n","/mnt/d/projects/Main Projects/social-media/app/client/src/hooks/useOutsideAlerter.tsx",["264"],"import { useEffect } from \"react\";\r\n\r\nconst useOutsideAlerter = (\r\n  ref: React.MutableRefObject<any>,\r\n  callback: () => void\r\n) => {\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: any) => {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        callback();\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [ref]);\r\n};\r\n\r\nexport default useOutsideAlerter;\r\n","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/Card.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/CardMenu.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/CardContent.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/CardTitle.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/CardActions.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/CardMeta.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/index.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/hooks/index.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Button/index.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Button/CustomButton.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Button/LikeButton.tsx",["265"],"import React, { useEffect, useState } from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { LikeType, User } from \"../../config/types\";\r\nimport { CustomButton } from \".\";\r\n\r\ninterface Props {\r\n  postId: string;\r\n  likes: LikeType[];\r\n  likeCount: number;\r\n  loggedInUser: User | null;\r\n}\r\n\r\nconst LikeButton: React.FC<Props> = ({\r\n  postId,\r\n  likes,\r\n  likeCount,\r\n  loggedInUser,\r\n}) => {\r\n  const [isLiked, setisLiked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      loggedInUser &&\r\n      likes.find((like) => like.username === loggedInUser.username)\r\n    ) {\r\n      setisLiked(true);\r\n    } else {\r\n      setisLiked(false);\r\n    }\r\n  });\r\n\r\n  const [likePost] = useMutation(LIKE_POST, {\r\n    update(proxy, { data: { likePost: post } }) {\r\n      likeCount = post.likeCount;\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n    },\r\n    variables: { postId },\r\n  });\r\n\r\n  return loggedInUser ? (\r\n    <CustomButton\r\n      styleClass=\"margin-r-md\"\r\n      color={isLiked ? \"primary\" : \"basic\"}\r\n      onClick={() => likePost()}\r\n    >\r\n      <FontAwesomeIcon icon={faThumbsUp} /> {likeCount}\r\n    </CustomButton>\r\n  ) : (\r\n    <Link to=\"/login\">\r\n      <CustomButton styleClass=\"margin-r-md\">\r\n        <FontAwesomeIcon icon={faThumbsUp} /> {likeCount}\r\n      </CustomButton>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport const LIKE_POST = gql`\r\n  mutation likePost($postId: ID!) {\r\n    likePost(postId: $postId) {\r\n      id\r\n      username\r\n      likeCount\r\n      likes {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default LikeButton;\r\n","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Button/CommentButton.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Button/ShareButton.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/utils/index.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Typography/index.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Typography/Heading.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Helpers/Spacer.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Helpers/index.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Helpers/Loading.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Navigation/Navbar.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Navigation/Links.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Navigation/Logo.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Inputs/index.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Inputs/CustomInputText.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Routes.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/pages/index.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/containers/AuthRoute.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Layout/Layout.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Modal/Modal.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Toast/Toast.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/graphql.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/config/ApolloClient.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Forms/CommentForm.tsx",["266","267","268"],"import React, { useState, useEffect } from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBan,\r\n  faComment,\r\n  faCommentDots,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport useForm from \"../../hooks/useForm\";\r\n\r\nimport { Heading } from \"../../components/Typography\";\r\nimport { CustomButton } from \"../../components/Button\";\r\nimport { CustomInputText } from \"../../components/Inputs\";\r\n\r\ninterface Props {\r\n  postId: string;\r\n  isEdit?: boolean;\r\n  body?: string;\r\n  commentId?: string;\r\n  callback?: () => void;\r\n}\r\n\r\nconst CommentForm: React.FC<Props> = ({\r\n  postId,\r\n  body,\r\n  callback,\r\n  commentId,\r\n  isEdit,\r\n}) => {\r\n  const [error, setError] = useState(\"\");\r\n  const { values, onSubmit, onChange } = useForm<{ comment: string }>(\r\n    {\r\n      comment: body ?? \"\",\r\n    },\r\n    hoistedFunction\r\n  );\r\n  const commentLengthLimit = 200;\r\n\r\n  useEffect(() => {\r\n    if (values.comment.length > commentLengthLimit) {\r\n      if (\r\n        error !== `Post needs to be less than ${commentLengthLimit} in length`\r\n      ) {\r\n        setError(`Post needs to be less than ${commentLengthLimit} in length`);\r\n      }\r\n    } else {\r\n      if (error !== \"\") {\r\n        setError(\"\");\r\n      }\r\n    }\r\n  }, [values.comment]);\r\n\r\n  const [createComment, { loading: createLoading }] = useMutation(\r\n    CREATE_COMMENT,\r\n    {\r\n      update(_, { data: { createComment: post } }) {\r\n        values.comment = \"\";\r\n      },\r\n      variables: {\r\n        body: values.comment,\r\n        postId,\r\n      },\r\n    }\r\n  );\r\n\r\n  const [editComment, { loading: editLoading }] = useMutation(EDIT_COMMENT, {\r\n    update(_, { data: { editComment: post } }) {},\r\n    variables: {\r\n      postId,\r\n      commentId,\r\n      body: values.comment,\r\n    },\r\n  });\r\n\r\n  function hoistedFunction() {\r\n    if (isEdit) {\r\n      editComment();\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    } else {\r\n      createComment();\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    if (values.comment.length <= commentLengthLimit) {\r\n      onSubmit(e);\r\n    } else {\r\n      e.preventDefault();\r\n      alert(\"Comment length limit exceeded\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"form comment-form full-width margin-y-md no-margin-x no-padding-t\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Heading size=\"sm\">\r\n        {isEdit ? \"Edit your comment\" : \"Comment on this post\"}\r\n      </Heading>\r\n\r\n      <div className=\"form-control\">\r\n        <CustomInputText\r\n          id=\"comment\"\r\n          label={`Comment... (${values.comment.length}/${commentLengthLimit})`}\r\n          name=\"comment\"\r\n          type=\"textarea\"\r\n          value={values.comment}\r\n          handleChange={onChange}\r\n          error={error}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-control margin-t-md\">\r\n        {isEdit && (\r\n          <CustomButton styleClass=\"full-width\" onClick={callback}>\r\n            <FontAwesomeIcon icon={faBan} /> Cancel\r\n          </CustomButton>\r\n        )}\r\n        <CustomButton color=\"filled\" styleClass=\"full-width\" type=\"submit\">\r\n          <FontAwesomeIcon icon={isEdit ? faCommentDots : faComment} />{\" \"}\r\n          {isEdit ? \"Edit Comment\" : \"Comment\"}\r\n        </CustomButton>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CREATE_COMMENT = gql`\r\n  mutation createComment($postId: ID!, $body: String!) {\r\n    createComment(postId: $postId, body: $body) {\r\n      id\r\n      body\r\n      username\r\n      firstName\r\n      lastName\r\n      edited\r\n      createdAt\r\n      likeCount\r\n      likes {\r\n        id\r\n        username\r\n      }\r\n      commentCount\r\n      comments {\r\n        id\r\n        commentId\r\n        body\r\n        username\r\n        firstName\r\n        lastName\r\n        createdAt\r\n        edited\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst EDIT_COMMENT = gql`\r\n  mutation($postId: ID!, $commentId: ID!, $body: String!) {\r\n    editComment(postId: $postId, commentId: $commentId, body: $body) {\r\n      comments {\r\n        id\r\n        commentId\r\n        body\r\n        username\r\n        firstName\r\n        lastName\r\n        createdAt\r\n        edited\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CommentForm;\r\n","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Forms/LoginForm.tsx",["269"],"import React from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nimport { AuthContext } from \"../../AuthUser.context\";\nimport useForm from \"../../hooks/useForm\";\n\nimport { Heading, Text } from \"../../components/Typography\";\nimport { CustomInputText } from \"../../components/Inputs\";\nimport { CustomButton } from \"../../components/Button\";\n\ninterface LoginFormValues {\n  username: string;\n  password: string;\n}\n\nconst LoginForm: React.FC = () => {\n  const context = React.useContext(AuthContext);\n  const [errors, setErrors] = React.useState<{ general: string }>({\n    general: \"\",\n  });\n  const { values, onSubmit, onChange } = useForm<LoginFormValues>(\n    {\n      username: \"\",\n      password: \"\",\n    },\n    handleLogin\n  );\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(_, { data: { login: userData } }) {\n      context.login(userData);\n      console.log(userData);\n    },\n    onError({ graphQLErrors, networkError }) {\n      if (graphQLErrors) {\n        setErrors(graphQLErrors[0].extensions!.exception.errors);\n      }\n    },\n    variables: values,\n  });\n\n  function handleLogin() {\n    loginUser();\n  }\n\n  return (\n    <form className=\"form login-form \" onSubmit={onSubmit}>\n      <Heading size=\"xl\" className=\"text-centered\">\n        LOGIN\n      </Heading>\n\n      {errors.general !== \"\" && (\n        <h4 className=\"input-text__error\">{errors.general}</h4>\n      )}\n      <div className=\"form-control\">\n        <CustomInputText\n          id=\"login-username\"\n          label=\"Username\"\n          type=\"text\"\n          name=\"username\"\n          value={values.username}\n          handleChange={onChange}\n          required\n          autoFocus\n        />\n      </div>\n      <div className=\"form-control\">\n        <CustomInputText\n          id=\"login-password\"\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          value={values.password}\n          handleChange={onChange}\n          required\n        />\n      </div>\n      <div className=\"form-control margin-y-lg\">\n        <CustomButton type=\"submit\" styleClass=\"full-width\" color=\"success\">\n          <FontAwesomeIcon icon={faSignInAlt} /> Login\n        </CustomButton>\n      </div>\n      <Text>\n        Not a member?\n        <Link to=\"/register\">\n          <span className=\"link\"> Sign up now.</span>\n        </Link>\n      </Text>\n    </form>\n  );\n};\n\nconst LOGIN_USER = gql`\n  mutation($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      username\n      firstName\n      lastName\n      token\n      email\n      followers\n      followerCount\n      following\n      followingCount\n      createdAt\n    }\n  }\n`;\n\nexport default LoginForm;\n","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Forms/PostForm.tsx",["270","271","272"],"import React, { useState, useEffect } from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { faBan, faEdit, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport useForm from \"../../hooks/useForm\";\r\nimport { GET_ALL_POSTS } from \"../../graphql\";\r\n\r\nimport { Heading } from \"../../components/Typography\";\r\nimport { CustomInputText } from \"../../components/Inputs\";\r\nimport { CustomButton } from \"../../components/Button\";\r\n\r\ninterface NewPostFormValues {\r\n  body: string;\r\n}\r\n\r\ninterface Props {\r\n  isEdit?: boolean;\r\n  body?: string;\r\n  postId?: string;\r\n  callback?: () => void;\r\n}\r\n\r\nconst PostForm: React.FC<Props> = ({ isEdit, body, postId, callback }) => {\r\n  let history = useHistory();\r\n  const [error, setError] = useState(\"\");\r\n  let { values, onChange, onSubmit } = useForm<NewPostFormValues>(\r\n    { body: body ?? \"\" },\r\n    hoistedFunction\r\n  );\r\n  const bodyLengthLimit = 250;\r\n\r\n  useEffect(() => {\r\n    if (values.body.length > bodyLengthLimit) {\r\n      if (error !== `Post needs to be less than ${bodyLengthLimit} in length`) {\r\n        setError(`Post needs to be less than ${bodyLengthLimit} in length`);\r\n      }\r\n    } else {\r\n      if (error !== \"\") {\r\n        setError(\"\");\r\n      }\r\n    }\r\n  }, [values.body]);\r\n\r\n  const [createPost, { loading }] = useMutation(CREATE_POST, {\r\n    update(proxy, { data: { createPost: post } }) {\r\n      let data: any = proxy.readQuery({ query: GET_ALL_POSTS });\r\n\r\n      proxy.writeQuery({\r\n        query: GET_ALL_POSTS,\r\n        data: { getPosts: [post, ...data.getPosts] },\r\n      });\r\n      values.body = \"\";\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  const [editPost, { error: editError }] = useMutation(EDIT_POST, {\r\n    update(_, { data: { editPost: post } }) {},\r\n    variables: {\r\n      postId,\r\n      body: values.body,\r\n    },\r\n  });\r\n\r\n  //  Regular function to allow hoisting to useForm hook\r\n  function hoistedFunction() {\r\n    if (isEdit) {\r\n      editPost();\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    } else {\r\n      createPost();\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    if (values.body.length <= bodyLengthLimit) {\r\n      onSubmit(e);\r\n    } else {\r\n      e.preventDefault();\r\n      alert(\"Post length limit exceeded\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"form post-form full-width margin-y-md\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Heading>{isEdit ? \"Edit your post\" : \"Post something!\"}</Heading>\r\n\r\n      <div className=\"form-control\">\r\n        <CustomInputText\r\n          id=\"new-post\"\r\n          label={`${isEdit ? \"Edit post...\" : \"What's on your mind?\"} (${\r\n            values.body.length\r\n          }/${bodyLengthLimit})`}\r\n          name=\"body\"\r\n          type=\"textarea\"\r\n          value={values.body}\r\n          handleChange={onChange}\r\n          required\r\n          error={error}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        {isEdit && (\r\n          <CustomButton styleClass=\"full-width text-4\" onClick={callback}>\r\n            <FontAwesomeIcon icon={faBan} /> Cancel\r\n          </CustomButton>\r\n        )}\r\n        <CustomButton\r\n          color=\"filled\"\r\n          styleClass=\"full-width text-4\"\r\n          type=\"submit\"\r\n        >\r\n          <FontAwesomeIcon icon={isEdit ? faEdit : faPencilAlt} />{\" \"}\r\n          {isEdit ? \"Edit\" : \"Post!\"}\r\n        </CustomButton>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CREATE_POST = gql`\r\n  mutation($body: String!) {\r\n    createPost(body: $body) {\r\n      id\r\n      body\r\n      username\r\n      firstName\r\n      lastName\r\n      edited\r\n      createdAt\r\n      likeCount\r\n      likes {\r\n        id\r\n        username\r\n      }\r\n      commentCount\r\n      comments {\r\n        id\r\n        commentId\r\n        body\r\n        username\r\n        firstName\r\n        lastName\r\n        createdAt\r\n        edited\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst EDIT_POST = gql`\r\n  mutation($postId: ID!, $body: String!) {\r\n    editPost(postId: $postId, body: $body) {\r\n      id\r\n      body\r\n      username\r\n      firstName\r\n      lastName\r\n      edited\r\n      createdAt\r\n      likeCount\r\n      likes {\r\n        id\r\n        username\r\n      }\r\n      commentCount\r\n      comments {\r\n        id\r\n        commentId\r\n        body\r\n        username\r\n        firstName\r\n        lastName\r\n        createdAt\r\n        edited\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default PostForm;\r\n","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Forms/RegisterForm.tsx",["273"],"import React from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { AuthContext } from \"../../AuthUser.context\";\nimport useForm from \"../../hooks/useForm\";\n\nimport { Heading, Text } from \"../../components/Typography\";\nimport { CustomInputText } from \"../../components/Inputs\";\nimport { CustomButton } from \"../../components/Button\";\n\ninterface RegisterFormValues {\n  firstName: string;\n  lastName: string;\n  username: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst RegisterForm: React.FC = () => {\n  const context = React.useContext(AuthContext);\n  const [errors, setErrors] = React.useState<RegisterFormValues>({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const { values, onSubmit, onChange } = useForm<RegisterFormValues>(\n    {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n    handleRegistration\n  );\n\n  const [registerUser, { loading }] = useMutation(REGISTER_USER, {\n    update(_, { data: { register: userData } }) {\n      context.login(userData);\n    },\n    variables: values,\n    onError({ graphQLErrors, networkError }) {\n      if (graphQLErrors) {\n        setErrors(graphQLErrors[0].extensions!.exception.errors);\n      }\n    },\n  });\n\n  function handleRegistration() {\n    registerUser();\n  }\n\n  return (\n    <form className=\"form\" onSubmit={onSubmit}>\n      <Heading size=\"xl\" className=\"text-centered\">\n        REGISTER\n      </Heading>\n      <div className=\"form-control\">\n        <CustomInputText\n          autoFocus\n          id=\"register-firstName\"\n          label=\"First Name\"\n          name=\"firstName\"\n          type=\"text\"\n          value={values.firstName}\n          handleChange={onChange}\n          error={errors.firstName}\n          required\n          styleClass=\"margin-r-md\"\n        />\n        <CustomInputText\n          id=\"register-lastName\"\n          label=\"Last Name\"\n          name=\"lastName\"\n          type=\"text\"\n          value={values.lastName}\n          handleChange={onChange}\n          error={errors.lastName}\n        />\n      </div>\n      <div className=\"form-control\">\n        <CustomInputText\n          handleChange={onChange}\n          id=\"register-username\"\n          label=\"Username\"\n          type=\"text\"\n          name=\"username\"\n          value={values.username}\n          error={errors.username}\n          required\n        />\n      </div>\n      <div className=\"form-control\">\n        <CustomInputText\n          handleChange={onChange}\n          id=\"register-email\"\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          value={values.email}\n          error={errors.email}\n          required\n        />\n      </div>\n      <div className=\"form-control\">\n        <CustomInputText\n          handleChange={onChange}\n          id=\"register-password\"\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          value={values.password}\n          error={errors.password}\n          required\n        />\n      </div>\n      <div className=\"form-control\">\n        <CustomInputText\n          id=\"register-confirmPassword\"\n          label=\"Confirm password\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          value={values.confirmPassword}\n          handleChange={onChange}\n          error={errors.confirmPassword}\n          required\n        />\n      </div>\n      <div className=\"form-control margin-y-lg\">\n        <CustomButton type=\"submit\" styleClass=\"full-width\" color=\"success\">\n          <FontAwesomeIcon icon={faUserPlus} /> Register\n        </CustomButton>\n      </div>\n      <Text>\n        Already a member?\n        <Link to=\"/login\">\n          <span className=\"link\"> Sign in.</span>\n        </Link>\n      </Text>\n    </form>\n  );\n};\n\nconst REGISTER_USER = gql`\n  mutation(\n    $username: String!\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    register(\n      registerInput: {\n        username: $username\n        firstName: $firstName\n        lastName: $lastName\n        email: $email\n        password: $password\n        confirmPassword: $confirmPassword\n      }\n    ) {\n      username\n      token\n      createdAt\n      firstName\n      lastName\n      email\n      id\n    }\n  }\n`;\n\nexport default RegisterForm;\n","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Forms/index.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Cards/CommentCard.tsx",["274"],"import React, { useState, useContext, Fragment } from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { faPenSquare, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../AuthUser.context\";\r\nimport { GET_ALL_POSTS } from \"../../graphql\";\r\nimport { getDate } from \"../../utils/date\";\r\nimport { Modal } from \"../../components/Modal/Modal\";\r\n\r\nimport useModal from \"../../hooks/useModal\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardImage,\r\n  CardMenu,\r\n  CardMeta,\r\n  CardTitle,\r\n} from \"../../components/Card\";\r\nimport { Heading, Text } from \"../../components/Typography\";\r\nimport CommentForm from \"../Forms/CommentForm\";\r\nimport { Box } from \"../../components/Layout\";\r\n\r\nimport UserDefaultImage from \"../../assets/img/user-default.jpg\";\r\n\r\ninterface Props {\r\n  comment: {\r\n    id: string;\r\n    commentId: string;\r\n    body: string;\r\n    username: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    createdAt: string;\r\n    edited: boolean;\r\n  };\r\n  postId: string;\r\n}\r\n\r\nconst CommentCard: React.FC<Props> = ({\r\n  comment: {\r\n    commentId,\r\n    body,\r\n    username,\r\n    firstName,\r\n    lastName,\r\n    createdAt,\r\n    edited,\r\n  },\r\n  postId,\r\n}) => {\r\n  const [showEditComment, setShowEditComment] = useState(false);\r\n  const { modalOpen, toggleModal } = useModal();\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [deleteComment, { loading }] = useMutation(DELETE_COMMENT, {\r\n    update(proxy, { data: { deleteComment: post } }) {\r\n      let queryData: any = proxy.readQuery({ query: GET_ALL_POSTS });\r\n\r\n      proxy.writeQuery({\r\n        query: GET_ALL_POSTS,\r\n        data: queryData,\r\n      });\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n    },\r\n    variables: {\r\n      postId,\r\n      commentId,\r\n    },\r\n  });\r\n\r\n  let signedInUserComment = false;\r\n  if (user) {\r\n    signedInUserComment = user.username === username;\r\n  }\r\n\r\n  const cardMenuOptions = [\r\n    {\r\n      callback: () => setShowEditComment((show) => !show),\r\n      value: (\r\n        <span>\r\n          <FontAwesomeIcon icon={faPenSquare} /> Edit\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      callback: toggleModal,\r\n      value: (\r\n        <span>\r\n          <FontAwesomeIcon icon={faTrash} /> Delete\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      <Modal\r\n        open={modalOpen}\r\n        onClose={toggleModal}\r\n        onCancel={toggleModal}\r\n        onConfirm={deleteComment}\r\n      >\r\n        <Text className=\"text-centered\" size=\"lg\">\r\n          Do you want to delete this comment?\r\n        </Text>\r\n      </Modal>\r\n      <Card>\r\n        {signedInUserComment && <CardMenu menuItems={cardMenuOptions} />}\r\n        <Link to={`/user/${username}`}>\r\n          <CardTitle>\r\n            <CardImage\r\n              size=\"sm\"\r\n              src={UserDefaultImage}\r\n              alt={`${firstName} ${lastName}`}\r\n            />\r\n            <Box vertical>\r\n              <Heading size=\"xs\">\r\n                {firstName} {lastName}\r\n                <span className=\"link is-lowercase\"> @{username}</span>\r\n              </Heading>\r\n              <CardMeta>{getDate(createdAt)}</CardMeta>\r\n            </Box>\r\n          </CardTitle>\r\n        </Link>\r\n        <CardContent>\r\n          {showEditComment ? (\r\n            <CommentForm\r\n              isEdit\r\n              body={body}\r\n              postId={postId}\r\n              commentId={commentId}\r\n              callback={() => setShowEditComment((show) => !show)}\r\n            />\r\n          ) : (\r\n            <Text>\r\n              {body}\r\n              {edited && <em>(edited)</em>}\r\n            </Text>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst DELETE_COMMENT = gql`\r\n  mutation deleteComment($postId: ID!, $commentId: ID!) {\r\n    deleteComment(postId: $postId, commentId: $commentId) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CommentCard;\r\n","/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Cards/PostCard.tsx",["275","276"],"/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Cards/index.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Layout/index.ts",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Layout/Container.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/containers/Cards/UserCard.tsx",["277","278","279"],"import React from \"react\";\nimport { faPen, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { FollowButton, ShareButton } from \"../../components/Button\";\nimport { Card, CardImage, CardActions, CardTitle } from \"../../components/Card\";\nimport { Heading, Paragraph } from \"../../components/Typography\";\nimport { User } from \"../../config/types\";\nimport { Box } from \"../../components/Layout\";\n\nimport UserDefaultImage from \"../../assets/img/user-default.jpg\";\n\ninterface Props {\n  user: User;\n}\n\nconst UserCard: React.FC<Props> = ({ user }) => {\n  return (\n    <Card>\n      <CardTitle>\n        <CardImage\n          size=\"lg\"\n          src={UserDefaultImage}\n          alt={`${user.firstName} ${user.lastName} image`}\n        />\n        <Box vertical>\n          <Heading size=\"xl\">\n            {user.firstName} {user.lastName}\n            <span className=\"link is-lowercase\"> @{user.username}</span>\n          </Heading>\n        </Box>\n      </CardTitle>\n\n      <CardActions>\n        <Paragraph>\n          <ShareButton share={`http://localhost:3000/user/${user.username}`} />\n        </Paragraph>\n        <FollowButton followUser={user} />\n        {/* <Paragraph>\n          <CustomButton>\n            <FontAwesomeIcon icon={faPen} /> Edit\n          </CustomButton>\n        </Paragraph> */}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default UserCard;\n","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Layout/Box.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Card/CardImage.tsx",[],"/mnt/d/projects/Main Projects/social-media/app/client/src/components/Button/FollowButton.tsx",["280","281"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { gql } from \"@apollo/client\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { CustomButton } from \".\";\nimport { Text } from \"../Typography\";\nimport { AuthContext } from \"../../AuthUser.context\";\nimport { User } from \"../../config/types\";\n\ninterface Props {\n  followUser: User;\n}\n\nconst FollowButton: React.FC<Props> = ({ followUser }) => {\n  const { user } = useContext(AuthContext);\n  const [isFollowing, setIsFollowing] = useState(false);\n\n  useEffect(() => {\n    if (user?.following?.find((userId) => userId === followUser.id)) {\n      setIsFollowing(true);\n    } else {\n      setIsFollowing(false);\n    }\n  });\n\n  return (\n    <Text>\n      <CustomButton color={isFollowing ? \"primary\" : undefined}>\n        <FontAwesomeIcon icon={faPlus} /> {isFollowing ? \"Unfollow\" : \"Follow\"}\n      </CustomButton>\n    </Text>\n  );\n};\n\nconst FOLLOW_USER = gql`\n  mutation followUser($username: String!) {\n    followUser(username: $username) {\n      id\n      username\n      firstName\n      lastName\n      email\n      followers\n      followerCount\n      following\n      followingCount\n      token\n    }\n  }\n`;\n\nexport default FollowButton;\n","/mnt/d/projects/Main Projects/social-media/app/client/src/components/Typography/Paragraph.tsx",[],{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","severity":1,"message":"287","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":22},{"ruleId":"290","severity":1,"message":"291","line":18,"column":6,"nodeType":"292","endLine":18,"endColumn":11,"suggestions":"293"},{"ruleId":"290","severity":1,"message":"294","line":25,"column":3,"nodeType":"288","endLine":25,"endColumn":12,"suggestions":"295"},{"ruleId":"290","severity":1,"message":"296","line":52,"column":6,"nodeType":"292","endLine":52,"endColumn":22,"suggestions":"297"},{"ruleId":"286","severity":1,"message":"298","line":54,"column":36,"nodeType":"288","messageId":"289","endLine":54,"endColumn":49},{"ruleId":"286","severity":1,"message":"299","line":67,"column":34,"nodeType":"288","messageId":"289","endLine":67,"endColumn":45},{"ruleId":"286","severity":1,"message":"300","line":32,"column":23,"nodeType":"288","messageId":"289","endLine":32,"endColumn":30},{"ruleId":"290","severity":1,"message":"296","line":44,"column":6,"nodeType":"292","endLine":44,"endColumn":19,"suggestions":"301"},{"ruleId":"286","severity":1,"message":"300","line":46,"column":24,"nodeType":"288","messageId":"289","endLine":46,"endColumn":31},{"ruleId":"286","severity":1,"message":"302","line":62,"column":29,"nodeType":"288","messageId":"289","endLine":62,"endColumn":38},{"ruleId":"286","severity":1,"message":"300","line":45,"column":26,"nodeType":"288","messageId":"289","endLine":45,"endColumn":33},{"ruleId":"286","severity":1,"message":"300","line":57,"column":27,"nodeType":"288","messageId":"289","endLine":57,"endColumn":34},{"ruleId":"286","severity":1,"message":"303","line":22,"column":3,"nodeType":"288","messageId":"289","endLine":22,"endColumn":11},{"ruleId":"286","severity":1,"message":"300","line":56,"column":24,"nodeType":"288","messageId":"289","endLine":56,"endColumn":31},{"ruleId":"286","severity":1,"message":"304","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":15},{"ruleId":"286","severity":1,"message":"305","line":2,"column":17,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"306","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":25},{"ruleId":"290","severity":1,"message":"307","line":19,"column":3,"nodeType":"288","endLine":19,"endColumn":12,"suggestions":"308"},{"ruleId":"286","severity":1,"message":"309","line":36,"column":7,"nodeType":"288","messageId":"289","endLine":36,"endColumn":18},"no-native-reassign",["310"],"no-negated-in-lhs",["311"],"@typescript-eslint/no-unused-vars","'ModalDetails' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["312"],"React Hook useEffect contains a call to 'setisLiked'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [loggedInUser, likes] as a second argument to the useEffect Hook.",["313"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.",["314"],"'createLoading' is assigned a value but never used.","'editLoading' is assigned a value but never used.","'loading' is assigned a value but never used.",["315"],"'editError' is assigned a value but never used.","'CardMeta' is defined but never used.","'faPen' is defined but never used.","'faPlus' is defined but never used.","'FontAwesomeIcon' is defined but never used.","React Hook useEffect contains a call to 'setIsFollowing'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user.following, followUser.id] as a second argument to the useEffect Hook.",["316"],"'FOLLOW_USER' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},"Update the dependencies array to be: [callback, ref]",{"range":"327","text":"328"},"Add dependencies array: [loggedInUser, likes]",{"range":"329","text":"330"},"Update the dependencies array to be: [error, values.comment]",{"range":"331","text":"332"},"Update the dependencies array to be: [error, values.body]",{"range":"333","text":"334"},"Add dependencies array: [user.following, followUser.id]",{"range":"335","text":"336"},[480,485],"[callback, ref]",[849,849],", [loggedInUser, likes]",[1307,1323],"[error, values.comment]",[1361,1374],"[error, values.body]",[772,772],", [user.following, followUser.id]"]